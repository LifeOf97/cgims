version: '3.8'

services:

  web_with_nginx:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - static_volume:/app/backend/static
      - media_volume:/app/backend/media
    networks:
      cgims_net:
        ipv4_address: 192.168.0.2
    ports:
      - 8000:80
      - 443:443
    depends_on:
      - api

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: gunicorn -c gunicorn.conf.py src.wsgi:application
    volumes:
      - static_volume:/home/cgims/backend/static
      - media_volume:/home/cgims/backend/media
    networks:
      cgims_net:
        ipv4_address: 192.168.0.3
    env_file:
      - ./backend/.env
    expose:
      - 8000
    depends_on:
      - db

  db:
    image: postgres:14-alpine
    restart: always
    env_file:
      - ./backend/.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      cgims_net:
        ipv4_address: 192.168.0.4

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    volumes:
      - ./pgadmin/pg:/var/lib/pgadmin
    networks:
      cgims_net:
        ipv4_address: 192.168.0.5
    env_file:
      - ./backend/.env
    ports:
      - 5050:80

volumes:
  postgres_data:
  static_volume:
  media_volume:


networks:
  cgims_net:
    ipam:
      driver: default
      config:
        - subnet: "192.168.0.0/24"
